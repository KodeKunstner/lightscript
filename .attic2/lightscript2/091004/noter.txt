LightScript version 2.0.0

    Node properties
        - node type
        - node subtype
        - node value
        - child nodes
        - position in file
        - comment (line above, lasting until next comment)

    Sexpr:
        - true false undefined
        - this global ()
        - (number num)
        - (string str)
        - (array elem1 ...) 
        - (dict key1 val1 ...)
        - (begin stmt1 ...)
        - (function (name arg1 ...) (locals ...) (begin ...))
        - (for name list (begin ...))
        - (while cond (begin ...))
        - (cond cond1 (begin ...) cond2 (begin ...) (begin ...))
        - (try (begin ...) var (begin ...))
        - (put seq key value)
        - (get seq key)
        - (call object method param1 param2 ...) 
            - (call () function param1 param2 ...)
        - (throw object)
        - (return object)
        - (comment str)
        - not, neg, add, sub, mul, div, rem, less, leq, eq, geq, greater, ...
        - len, clone

    Combined parser and prettyprinter:
        "function": {
            "lbp": function() {
                ...
            }
            "nud": function() { 
                ...
             },
             "prettyprint": function(indent) {
                ...
             }
        }

        infix("equals", "==", 50);

    Node types:
        - literal
            - subtype: (string, boolean, number, undefined)
            - val
        - initialisation
            - subtype: (array, dictionary)
            - children: ([elem0, elem1, ...], [key0, val0, key1, val1, ...])
        - function definition
            - docstring
            - locals
            - children: [name, code-block, params]
        - for-in
            - children: [elem, list, code-block]
        - while
            - children: [condition, code-block]
        - if-else
            - children: [cond0, block0, cond1, block1, ..., optional-else-block]
        - code-block
        - try-except
            - children: [try-block, name, except-block]
        - put (x.foo = blah)
        - set (x = blah)
        - var-name
            - scope: (local, outer)
        - method call 
        - special-name
            - subtype: (global, this, void)
        - exit
            - subtype: throw, return
        - builtin pure function
            - subtype: (!, -, subscript, +, -, *, /, <, >, ==, !=, <=, >=)

    Builtin functions
        - str(obj)
        - iter(obj)
        - len(obj)
        - Exception(str)
        - file(name)
        - file.read()
        - print(x)
        - dict()


LightScript version 2.2
    - JavaScript backend
    - object literals
    - array literals
    - except without naming
    - arbitrary var names, w/mangling within languages
    - yield
    - prototypal inheritance
    - do-while
    - general for with key-list-generation-fallback for old javascript
    - import
    - list comprehension
    - +=, ...
    - maybe lambda

LightScript version 2.4
    - Java-backend
    - optional typing

LightScript version 2.6
    - compilation to virtual machine
    - j2me vm

LightScript version 2.8
    - C-backend and interpreter
    - native code generation on arm and x86

